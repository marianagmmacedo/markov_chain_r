library(igraph)
library(expm)
require(graphics)
require(markovchain)
byRow <- TRUE
numberStates <- 4
nameStates <- c("Strongest Coordination", "Coordination", "Losing coordination", "Random")
m <- c(0.8092654728680626, 0.13233890336044554, 0.058395623771491705, 0.0 ,0.1850280506286211, 0.33847083489120133, 0.4749712827616665, 0.0015298317185109638 ,0.016789767250983252, 0.05465617116259917, 0.7886519009704787, 0.13990216061593908 ,0.0033470968636827134, 0.0018072252475334592, 0.12399252571874095, 0.870853152170043)
matrixT <- matrix(data = m, byrow = byRow, nrow = numberStates)
rownames(matrixT)<-colnames(matrixT)<-nameStates
rowSums(matrixT)
markovRun <- new('markovchain', byrow = byRow,transitionMatrix = matrixT, name = 'Markov Chain')
myMc<-as(matrixT, 'markovchain')
png(sprintf("/Users/mgmmacedo/Documents/MarkovChain_results/4states_regular30_markov_chain.png"),width=8,height=6,units="in",res=100)
plot(myMc, vertex.size=10, vertex.label.color="black", 
     vertex.label.dist=4 , edge.arrow.size=0.3, asp = 1.0)
dev.off()
show(markovRun)
summary(markovRun)
absorbingStates(markovRun)
transientStates(markovRun)
steadyStates(markovRun)




each_state[1,] <- c(0.88,0.81,0.71,0.90,0.78,0.78,0.91,0.81,0.83,0.92,0.84,0.78,0.75,0.87,0.88,0.74,0.88,0.84,0.79,0.82,0.90,0.38,0.83,0.85,0.92,0.68,0.78,0.91,0.70,0.84)

each_state[2,] <- c(0.11,0.15,0.21,0.09,0.17,0.10,0.06,0.14,0.10,0.07,0.12,0.16,0.21,0.09,0.12,0.11,0.10,0.12,0.18,0.13,0.08,0.38,0.12,0.06,0.08,0.22,0.15,0.07,0.18,0.10)

each_state[3,] <- c(0.01,0.05,0.07,0.02,0.05,0.12,0.03,0.05,0.08,0.02,0.04,0.06,0.04,0.04,0.00,0.15,0.03,0.04,0.03,0.05,0.02,0.25,0.06,0.09,0.00,0.10,0.07,0.02,0.12,0.06)

each_state[4,] <- c(0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00)

each_state[5,] <- c(0.15,0.23,0.21,0.22,0.32,0.15,0.24,0.22,0.15,0.05,0.19,0.19,0.20,0.18,0.11,0.11,0.18,0.16,0.17,0.19,0.21,0.09,0.33,0.10,0.31,0.16,0.21,0.32,0.10,0.12)

each_state[6,] <- c(0.44,0.42,0.29,0.33,0.34,0.35,0.48,0.41,0.26,0.32,0.26,0.40,0.32,0.30,0.38,0.28,0.40,0.29,0.28,0.42,0.30,0.22,0.38,0.37,0.08,0.34,0.40,0.32,0.31,0.46)

each_state[7,] <- c(0.41,0.36,0.50,0.44,0.34,0.50,0.27,0.38,0.59,0.59,0.53,0.41,0.48,0.52,0.51,0.61,0.42,0.55,0.55,0.40,0.49,0.70,0.29,0.54,0.62,0.50,0.39,0.37,0.59,0.41)

each_state[8,] <- c(0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.03,0.02,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00)

each_state[9,] <- c(0.00,0.03,0.01,0.02,0.01,0.02,0.02,0.03,0.01,0.01,0.03,0.02,0.01,0.01,0.01,0.01,0.03,0.02,0.01,0.03,0.01,0.01,0.03,0.02,0.01,0.02,0.02,0.00,0.02,0.02)

each_state[10,] <- c(0.06,0.09,0.04,0.05,0.05,0.07,0.05,0.06,0.08,0.06,0.06,0.06,0.06,0.04,0.05,0.03,0.07,0.05,0.05,0.03,0.05,0.05,0.05,0.06,0.02,0.10,0.07,0.02,0.06,0.04)

each_state[11,] <- c(0.80,0.72,0.73,0.82,0.83,0.77,0.79,0.77,0.80,0.77,0.80,0.82,0.81,0.83,0.80,0.79,0.79,0.78,0.79,0.81,0.80,0.71,0.77,0.82,0.82,0.81,0.76,0.83,0.77,0.78)

each_state[12,] <- c(0.13,0.16,0.22,0.11,0.10,0.14,0.13,0.14,0.11,0.16,0.11,0.11,0.12,0.12,0.14,0.17,0.11,0.15,0.16,0.13,0.13,0.23,0.16,0.11,0.16,0.07,0.14,0.15,0.15,0.16)

each_state[13,] <- c(0.01,0.01,0.00,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.00,0.01,0.01,0.00,0.00,0.00,0.00,0.00,0.00,0.01,0.00,0.01,0.01,0.00,0.00,0.00,0.00,0.00,0.00)

each_state[14,] <- c(0.00,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.01,0.00,0.00,0.00,0.00)

each_state[15,] <- c(0.12,0.12,0.13,0.13,0.06,0.15,0.17,0.15,0.08,0.13,0.13,0.13,0.14,0.11,0.14,0.13,0.07,0.10,0.12,0.13,0.12,0.14,0.11,0.10,0.13,0.17,0.16,0.11,0.11,0.13)

each_state[16,] <- c(0.88,0.87,0.87,0.86,0.94,0.84,0.83,0.84,0.91,0.87,0.86,0.86,0.84,0.88,0.85,0.87,0.92,0.90,0.88,0.87,0.87,0.86,0.88,0.89,0.87,0.82,0.84,0.89,0.88,0.87)


for (i in 1:25){
  png(sprintf("/Users/mgmmacedo/Documents/MarkovChain_results/4_state_regular30_%d.png",i))
  d <- each_state[i,]
  hist(d)
  dev.off()
}


numberStates <- 4
[[0.8092654728680626, 0.13233890336044554, 0.058395623771491705, 0.0], [0.1850280506286211, 0.33847083489120133, 0.4749712827616665, 0.0015298317185109638], [0.016789767250983252, 0.05465617116259917, 0.7886519009704787, 0.13990216061593908], [0.0033470968636827134, 0.0018072252475334592, 0.12399252571874095, 0.870853152170043]]